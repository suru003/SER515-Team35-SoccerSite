{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Team } from 'src/models/team';\nimport { Validators } from '@angular/forms';\nlet CoachComponent = class CoachComponent {\n  constructor(coachService, teamService, formBuilder) {\n    this.coachService = coachService;\n    this.teamService = teamService;\n    this.formBuilder = formBuilder;\n    this.PAGE_HEADER = \"Team-Director DashBoard\"; // true: add false: update\n\n    this.add_update = true;\n    this.id = \"test3\";\n  }\n\n  ngOnInit() {\n    this.getAllTeams();\n    this.formValue = this.formBuilder.group({\n      tournamentID: ['', Validators.required],\n      categoryId: ['', Validators.required],\n      teamName: ['', Validators.required],\n      coachID: ['', Validators.required]\n    });\n  }\n  /**\r\n   * Adding new Team\r\n   */\n\n\n  addTeam() {\n    this.selectedTeams = new Team();\n    this.selectedTeams.teamID = \"\";\n    this.selectedTeams.tournamentID = this.formValue.value.tournamentID;\n    this.selectedTeams.teamName = this.formValue.value.teamName;\n    this.selectedTeams.coachID = this.formValue.value.coachID;\n    this.selectedTeams.categoryID = this.formValue.value.categoryID;\n    this.selectedTeams.status = false;\n    this.teamService.addTeam(this.selectedTeams).subscribe(res => {\n      console.log(\"Adding team: \" + res.teamName);\n      alert(\"Team added successfully\");\n      this.formValue.reset();\n      let formCancel = document.getElementById(\"cancel\");\n      if (formCancel != null) formCancel.click(); // refresh the list\n\n      this.getAllTeams();\n    }, err => {\n      alert(\"Failed to add the team: \" + err);\n    });\n  }\n  /**\r\n  * Deleting a Team\r\n  */\n\n\n  deleteTeam(id) {\n    this.teamService.deleteTeam(id).subscribe(res => {\n      // console.log(\"Team deleted at index: \"+id);\n      // refresh the list\n      this.getAllTeams();\n    });\n  }\n\n  onEdit(index) {\n    this.add_update = false;\n    this.selectedTeams = this.teams[index];\n    this.formValue.controls['tournamentID'].setValue(this.selectedTeams.tournamentID);\n    this.formValue.controls['teamName'].setValue(this.selectedTeams.teamName);\n    this.formValue.controls['coachID'].setValue(this.selectedTeams.coachID);\n    this.formValue.controls['categoryDd'].setValue(this.selectedTeams.categoryID);\n    this.selectedTeams.status = false;\n  }\n\n  updateTeam() {\n    this.teamService.updateTeam(this.selectedTeams).subscribe(res => {\n      console.log(\"Updating team: \" + res.teamName);\n      alert(\"Team updated successfully\");\n      this.formValue.reset();\n      let formCancel = document.getElementById(\"cancel\");\n      if (formCancel != null) formCancel.click(); // refresh the list\n\n      this.getAllTeams();\n    }, err => {\n      alert(\"Failed to update the team: \" + err);\n    });\n  }\n\n  getAllTeams() {\n    this.teamService.getAllTeams().subscribe(data => {\n      this.teams = data;\n    });\n    this.add_update = true;\n  }\n\n  getCoach(id) {\n    this.coachService.getCoach(id).subscribe(response => {\n      this.coach = response;\n    }, error => {\n      alert(error.message);\n    });\n  }\n\n};\nCoachComponent = __decorate([Component({\n  selector: 'app-coach',\n  templateUrl: './coach.component.html',\n  styleUrls: ['./coach.component.css']\n})], CoachComponent);\nexport { CoachComponent };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TournamentDirectorService = /*#__PURE__*/(() => {\n  class TournamentDirectorService {\n    constructor(http) {\n      this.http = http;\n      this.serverUrl = `${environment.apiBaseUrl}/tournament`;\n      this.categoryUrl = `${environment.apiBaseUrl}/category`;\n      this.managerUrl = `${environment.apiBaseUrl}/tournamentManager`;\n    } // Tournaments\n\n\n    findAllTournaments() {\n      return this.http.get(`${this.serverUrl}/all`);\n    }\n\n    createTournament(tournament, manager_id) {\n      const params = new HttpParams().append(manager_id);\n      return this.http.post(`${this.serverUrl}/insert`, tournament, {\n        params: params\n      });\n    }\n\n    findTournamentByID(id) {\n      return this.http.get(`${this.serverUrl}/find/${id}`);\n    }\n\n    deleteTournament(id) {\n      return this.http.delete(`${this.serverUrl}/delete/${id}`);\n    }\n\n    updateTournament(tournament) {\n      return this.http.put(`${this.serverUrl}/update`, tournament);\n    } // Category\n\n\n    findAllCategories() {\n      return this.http.get(`${this.categoryUrl}/all`);\n    } // tournament manager\n\n\n    findTournamentDirectorByID(id) {\n      return this.http.get(`${this.managerUrl}/find/${id}`);\n    }\n\n  }\n\n  TournamentDirectorService.ɵfac = function TournamentDirectorService_Factory(t) {\n    return new (t || TournamentDirectorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TournamentDirectorService.ɵprov = i0.ɵɵdefineInjectable({\n    token: TournamentDirectorService,\n    factory: TournamentDirectorService.ɵfac\n  });\n  return TournamentDirectorService;\n})();","map":null,"metadata":{},"sourceType":"module"}
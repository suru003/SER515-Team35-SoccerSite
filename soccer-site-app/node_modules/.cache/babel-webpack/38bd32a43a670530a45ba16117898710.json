{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { Referee } from '../../models/referee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/admin2.service\";\nconst _c0 = [\"close\"];\nexport let UserListComponent = /*#__PURE__*/(() => {\n  class UserListComponent {\n    // formdata: FormGroup;\n    // refereeFound: Referee[] = [];\n    constructor(route, router, adminService) {\n      this.route = route;\n      this.router = router;\n      this.adminService = adminService;\n      this.user = [];\n      this.admins = [];\n      this.referee = [];\n      this.roles = [];\n      this.newReferee = new Referee();\n      this.formdata = new FormGroup({\n        id: new FormControl(),\n        firstName: new FormControl(),\n        lastName: new FormControl(),\n        email: new FormControl(),\n        contactNo: new FormControl(),\n        username: new FormControl(),\n        password: new FormControl(),\n        address: new FormControl(),\n        city: new FormControl(),\n        country: new FormControl(),\n        roleID: new FormControl()\n      });\n      this.title = 'All Users'; // this.newReferee = new Referee();\n    }\n\n    ngOnInit() {\n      this.adminService.findAllReferees().subscribe(data => {\n        this.referee = data;\n        console.log(data);\n      });\n    }\n\n    deleteReferee() {\n      this.adminService.deleteReferee(this.deleteUserID).subscribe(data => {\n        console.log(data);\n        this.viewAllUsers();\n      }, error => console.log(error));\n      this.closeModal();\n      this.refreshPage();\n    }\n\n    confirmDeletion(id) {\n      this.deleteUserID = id;\n      this.adminService.findRefereeByID(id).subscribe(data => {\n        this.deleteRef = data;\n        this.deleteRef = Array.of(this.deleteRef);\n      }, error => console.log(error));\n    }\n\n    updateReferee(id) {\n      this.updateUserID = id;\n      console.log(\"id is:\" + id);\n      this.getRoles();\n      this.adminService.findRefereeByID(id).subscribe(data => {\n        this.newRefereelist = data;\n        this.newRefereelist = Array.of(this.newRefereelist);\n        console.log(data);\n      }, error => console.log(error));\n    }\n\n    get refereeID() {\n      return this.updateUserID;\n    }\n\n    get refereeFirstN() {\n      return this.formdata.get('firstName');\n    }\n\n    get refereeLastN() {\n      return this.formdata.get('lastName');\n    }\n\n    get refereeEmail() {\n      return this.formdata.get('email');\n    }\n\n    get refereeContactNo() {\n      return this.formdata.get('contactNo');\n    }\n\n    get refereeUsername() {\n      return this.formdata.get('username');\n    }\n\n    get refereePassword() {\n      return this.formdata.get('password');\n    }\n\n    get refereeAddress() {\n      return this.formdata.get('address');\n    }\n\n    get refereeCity() {\n      return this.formdata.get('city');\n    }\n\n    get refereeCountry() {\n      return this.formdata.get('country');\n    }\n\n    get refereeRoleID() {\n      return this.formdata.get('roleID');\n    }\n\n    onSubmit() {\n      this.newReferee = new Referee();\n      this.newReferee.id = this.refereeID;\n      this.newReferee.firstName = this.refereeFirstN.value;\n      this.newReferee.lastName = this.refereeLastN.value;\n      this.newReferee.email = this.refereeEmail.value;\n      this.newReferee.contactNo = this.refereeContactNo.value;\n      this.newReferee.username = this.refereeUsername.value;\n      this.newReferee.password = this.refereePassword.value;\n      this.newReferee.address = this.refereeAddress.value;\n      this.newReferee.city = this.refereeCity.value;\n      this.newReferee.country = this.refereeCountry.value;\n      this.newReferee.roleID = this.refereeRoleID.value; // console.log(this.StudentBranch.value);  \n\n      this.adminService.updateReferee(this.newReferee).subscribe(data => {\n        console.log(data);\n      }, error => console.log(error));\n      this.closeModal();\n      this.refreshPage();\n    }\n\n    viewAllUsers() {\n      this.router.navigate(['/allusers']);\n    }\n\n    closeModal() {\n      this.close.nativeElement.click();\n    } // closeDeleteModal(){\n    //   this.closeDeleteModal.nativeElement.click();\n    // }\n\n\n    refreshPage() {\n      window.location.reload();\n    }\n\n    getRoles() {\n      this.adminService.findAllRoles().subscribe(data => {\n        this.roles = data;\n        console.log(data);\n      });\n    }\n\n  }\n\n  UserListComponent.ɵfac = function UserListComponent_Factory(t) {\n    return new (t || UserListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Admin2Service));\n  };\n\n  UserListComponent.ɵcmp = i0.ɵɵdefineComponent({\n    type: UserListComponent,\n    selectors: [[\"app-user-list\"]],\n    viewQuery: function UserListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 1);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.close = _t.first);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function UserListComponent_Template(rf, ctx) {},\n    styles: [\"body[_ngcontent-%COMP%]{background-color:#f3f3f3}.addButton[_ngcontent-%COMP%]{background-color:#00f;border-radius:50%;width:30px;height:30px;padding:10px}.background-color-1[_ngcontent-%COMP%]{background-color:#d8282b66}.background-color-2[_ngcontent-%COMP%]{background-color:#007be166}.background-color-3[_ngcontent-%COMP%]{background-color:#ffc10866}.container[_ngcontent-%COMP%]{padding:0}.edit-user-btn[_ngcontent-%COMP%]{color:green}.delete-user-btn[_ngcontent-%COMP%]{color:#af272f}.second-row[_ngcontent-%COMP%]   .icon-col[_ngcontent-%COMP%]{position:relative}.icon-color-1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#d8282b}.icon-color-2[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#284c88}.icon-color-3[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#fedb00}.logo-name[_ngcontent-%COMP%]{color:#fff;font-size:1.5rem}.main-page[_ngcontent-%COMP%]{width:calc(100vw - 15rem);margin-left:15rem;padding:.4rem 1rem 0}.navbar[_ngcontent-%COMP%]{padding:0}.navbar[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{float:left;text-align:center;display:block;padding:1rem .5rem;color:#fff;text-decoration:none}.profile-image[_ngcontent-%COMP%]{background-image:url(profile.jpeg);width:50px;height:50px;background-color:#00f;background-size:cover;background-position:top center;border-radius:50%;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.profile-text[_ngcontent-%COMP%]{position:relative}.profile-text-title[_ngcontent-%COMP%]{font-weight:bold;font-size:.8rem}.profile-text-subtitle[_ngcontent-%COMP%]{font-weight:400;font-size:.7rem}.profile-child[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.profile-text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:.7rem;margin-bottom:0}.profile-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:100%;border-radius:50%}.profile-image-row[_ngcontent-%COMP%]{background-color:#00f}.sidebar[_ngcontent-%COMP%]{position:fixed;left:0;top:0;width:15rem;height:100%;background-color:#af272f;padding:2rem;z-index:99;float:left}.second-row[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%]{margin-bottom:0;font-size:1.85rem}.second-row[_ngcontent-%COMP%]   .card-text[_ngcontent-%COMP%]{font-weight:300;font-size:.8rem;margin-bottom:.6rem}.second-row[_ngcontent-%COMP%]   .card-subtext[_ngcontent-%COMP%]{font-weight:300;font-size:.7rem;color:gray}.second-row[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:30px}.second-row[_ngcontent-%COMP%]   .icon-circle[_ngcontent-%COMP%]{border-radius:50%;padding:10px;width:50px;height:50px;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.second-row[_ngcontent-%COMP%]   .icon-col[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{display:table-cell;vertical-align:middle;text-align:center}.second-row[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{border:none}.top-bar[_ngcontent-%COMP%]{width:100%;height:4rem;background-color:#fff}.top-bar[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{height:4rem;padding-left:1rem}.top-bar[_ngcontent-%COMP%]   .topbar-icon-col[_ngcontent-%COMP%]{position:relative}.top-bar[_ngcontent-%COMP%]   .topbar-icon-col[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{display:table-cell;vertical-align:middle;text-align:center}.top-bar[_ngcontent-%COMP%]   .icon-circle[_ngcontent-%COMP%]{border-radius:50%;padding:10px;width:35px;height:35px;display:table;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.top-bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:1px;background:#db393c;width:150px;height:34px;border-radius:5px;color:#fff;display:table;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:.8rem}\"]\n  });\n  return UserListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}